'use strict';

const {Router} = require(`express`);
const {PUBLICATIONS_PER_PAGE} = require(`../../../constants`);

const mainRouter = new Router();
const api = require(`../../api`).getAPI();

mainRouter.get(`/`, async (req, res) => {
  // –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  let {page = 1} = req.query;
  page = +page;

  // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Ä–∞–≤–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const limit = PUBLICATIONS_PER_PAGE;

  // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å - —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
  const offset = (page - 1) * PUBLICATIONS_PER_PAGE;

  const [
    {count, publications},
    categories
  ] = await Promise.all([
    api.getPublications({limit, offset, comments: true}),
    api.getCategories()
  ]);

  // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü ‚Äî —ç—Ç–æ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –ø–æ–¥–µ–ª—ë–Ω–Ω–æ–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (—Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –≤–≤–µ—Ä—Ö)
  const totalPages = Math.ceil(count / PUBLICATIONS_PER_PAGE);

  // –ø–µ—Ä–µ–¥–∞–¥–∏–º –≤—Å–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω
  res.render(`pages/main`, {
    previews: publications,
    themes: categories,
    page,
    totalPages,
    title: `–¢–∏–ø–æ—Ç–µ–∫–∞`,
    hiddenTitle: ` –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–∏—á–Ω–æ–≥–æ –±–ª–æ–≥–∞ –¢–∏–ø–æ—Ç–µ–∫–∞`,
    description: `–≠—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü –±–ª–æ–≥–∞ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ–±—ã –æ–ø–∏—Å–∞—Ç—å —Å–µ–±—è üëè`,
    account: null,
    hasContent: true,
    hasHot: true,
    hasLastComments: true
  });
});

mainRouter.get(`/register`, (_, res) => {
  return res.render(`pages/register`, {
    title: `–¢–∏–ø–æ—Ç–µ–∫–∞`,
    error: {
      email: false,
      password: false,
    },
  });
});

mainRouter.get(`/login`, (_, res) => {
  return res.render(`pages/login`, {
    title: `–¢–∏–ø–æ—Ç–µ–∫–∞`,
    error: {
      email: false,
      password: false,
    },
  });
});

mainRouter.get(`/search`, async (req, res) => {
  const {search = ``} = req.query;
  let results = [];

  try {
    results = await api.search(search);
  } catch (e) {
    results = [];
  }

  return res.render(`pages/search`, {
    results,
    searchValue: search,
    title: `–¢–∏–ø–æ—Ç–µ–∫–∞`,
    hiddenTitle: ` –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∏—Å–∫–∞ –ª–∏—á–Ω–æ–≥–æ –±–ª–æ–≥–∞ –¢–∏–ø–æ—Ç–µ–∫–∞`,
    account: null
  });
});

module.exports = mainRouter;
